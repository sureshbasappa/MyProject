{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_interceptors/looding.interceptor.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/_services/account.service.ts","./src/app/member/photo-editor/photo-editor.component.ts","./src/app/member/photo-editor/photo-editor.component.html","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/member/member-edit/member-edit.component.ts","./src/app/member/member-edit/member-edit.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/member/member-card/member-card.component.ts","./src/app/member/member-card/member-card.component.html","./src/app/_guards/auth.guard.ts","./src/app/errors/not-fount/not-fount.component.ts","./src/app/errors/not-fount/not-fount.component.html","./src/app/_services/message.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_services/bussy.service.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/member/member-list/member-list.component.html","./src/app/member/member-list/member-list.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/_services/presence.service.ts","./src/app/member/member-detail/member-detail.component.ts","./src/app/member/member-detail/member-detail.component.html","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/member/member-messages/member-messages.component.html","./src/app/member/member-messages/member-messages.component.ts","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n\n  baseUrl=environment.apiUrl;\n  validationErrors: string[]=[];\n  constructor(private http:HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error(){\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(Response=>{\n      console.log(Response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n  get400Error(){\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(Response=>{\n      console.log(Response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n  get500Error(){\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(Response=>{\n      console.log(Response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n  get401Error(){\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(Response=>{\n      console.log(Response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n\n  get400ValidationError(){\n    this.http.post(this.baseUrl + 'account/register',{}).subscribe(Response=>{\n      console.log(Response);\n    }, error =>{\n      console.log(error);\n      this.validationErrors=error;\n    })\n  }\n\n}\n","<ng-container >\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-4\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-4\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-4\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-4\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-4\">Test 400 Validation Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BussyService } from '../_services/bussy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoodingInterceptor implements HttpInterceptor {\n\n  constructor(private bussyService:BussyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.bussyService.bussy();\n    return next.handle(request).pipe(\n      finalize(()=>{\n        this.bussyService.idle();\n      })\n    )\n  }\n}\n","<div class=\"form-group\">\n    <input \n    type=\"text\"\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\n    class='form-control'\n    [formControl]='ngControl.control'\n    placeholder=\"{{label}}\"\n    bsDatepicker\n    [bsConfig]='bsConfig'\n    [maxDate]='maxDate'>\n<div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n@Input() label:string;\n@Input() maxDate:Date;\nbsConfig:Partial<BsDatepickerConfig>;\n\n\n  constructor(@Self() public ngControl:NgControl) { \n    this.ngControl.valueAccessor=this;\n    this.bsConfig={\n      containerClass:'theme-red',\n      dateInputFormat:'DD MMMM YYYY'\n    }\n\n  }\n\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { error } from 'protractor';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n \r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm:FormGroup;\r\n  maxDate:Date;\r\n\r\n  validationErrors:string[]=[];\r\n  \r\n\r\n  constructor(private accountService: AccountService, private toastr:ToastrService, \r\n    private fb:FormBuilder, private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.intitializeForm();\r\n    this.maxDate= new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear()-18);\r\n  }\r\n\r\n  intitializeForm(){\r\n    this.registerForm=this.fb.group({\r\n      gender: ['male',],\r\n      username: ['',Validators.required],\r\n      KnownAs: ['',Validators.required],\r\n      dateOfBirth: ['',Validators.required],\r\n      city: ['',Validators.required],\r\n      country: ['',Validators.required],\r\n      password: ['',[Validators.required, Validators.minLength(4),Validators.maxLength(8)]],\r\n      confirmPassword: ['',[Validators.required,this.matchValues('password')]]\r\n    })\r\n    this.registerForm.controls.password.valueChanges.subscribe(()=>{\r\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  matchValues(matchTo:string):ValidatorFn{\r\n    return(control:AbstractControl)=>{\r\n      return control?.value===control?.parent?.controls[matchTo].value?null:{isMatching:true}\r\n    }\r\n  }\r\n\r\n  register(){\r\n     this.accountService.registor(this.registerForm.value).subscribe(Response=>{\r\n      this.router.navigateByUrl('/members')\r\n    },error=> {\r\n      this.validationErrors=error;\r\n    }) \r\n  }\r\n\r\n  cancel(){\r\n    this.cancelRegister.emit('');\r\n  }\r\n\r\n}\r\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n    <h2 class=\"text-center text-primary\">SignUp</h2>\r\n    <hr>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label\" style=\"margin-right: 10px;\">I am a: </label>\r\n        <label class=\"radio-inline\">\r\n            <input type=\"radio\" value='male' formControlName='gender' class=\"ml-3\">Male \r\n            <input type=\"radio\" value='female' formControlName='gender' class=\"ml-3\">Female \r\n        </label>\r\n    </div>\r\n    \r\n    \r\n    <app-text-input [formControl]='registerForm.controls[\"username\"]' \r\n        [label]='\"Username\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"KnownAs\"]' \r\n        [label]='\"KnownAs\"'></app-text-input>\r\n    <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' \r\n    [label]='\"Date Of Birth\"' [maxDate]='maxDate'></app-date-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"city\"]' \r\n        [label]='\"City\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"country\"]' \r\n        [label]='\"Country\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"password\"]' \r\n        [label]='\"Passwords\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' \r\n        [label]='\"confirm Password\"'\r\n        [type]='\"password\"'></app-text-input>\r\n\r\n    <div class=\"row\" *ngIf=\"validationErrors.length>0\" >\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"form-group text-center\">\r\n        <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\r\n        <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"submit\">Cancel</button>\r\n    </div>\r\n</form>\r\n","<div class='row'>\n    <div class='col-sm-2' *ngFor='let photo of photos'>\n    <h4>{{photo.username}}</h4>\n    <img src='{{photo.url}}' class='img-thumbnail p-1' alt='{{photo.username}}'>\n        <div class='text-center'>\n        <button class='btn btn-sm btn-success mr-1' (click)='approvePhoto(photo.id)'>Approve</button>\n        <button class='btn btn-sm btn\u0002danger' (click)='rejectPhoto(photo.id)'>Reject</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\nphotos: Photo[];\n\n  constructor(private adminService:AdminService) { }\n\n  ngOnInit(): void {\n    this.getPhotosForApproval();\n  }\n\n  getPhotosForApproval(){\n    this.adminService.getPhotosForApproval().subscribe(photos=>{\n      this.photos=photos;\n    })\n  }\n\n  approvePhoto(photoId){\n    this.adminService.approvePhoto(photoId).subscribe(()=>{\n      this.photos.slice(this.photos.findIndex(p=>p.id===photoId),1)\n      console.log(photoId);\n    })\n  }\n\n  rejectPhoto(photoId){\n    this.adminService.rejectPhoto(photoId).subscribe(()=>{\n      this.photos.slice(this.photos.findIndex(p=>p.id===photoId),1)\n      console.log(photoId);\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PresenceService } from './presence.service';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl =environment.apiUrl;\r\nprivate currentUserSource = new ReplaySubject<User>(1);\r\ncurrentUsers$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http:HttpClient, private presence:PresenceService) { }\r\n  \r\n  login(model:any){\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response:User)=>{\r\n        const user = response;\r\n        if(user){\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n          console.log(user + \"Suresh 5\");\r\n          \r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\nregistor(model:any){\r\n    return this.http.post(this.baseUrl+'account/register', model).pipe(\r\n      map((user:User)=>{\r\n        if(user){\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n        return user;\r\n      })\r\n    )\r\n}\r\n\r\n  setCurrentUser(user:User){\r\n    user.roles=[];\r\n    const roles=this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles)?user.roles=roles:user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnecton();\r\n  }\r\n\r\n  getDecodedToken(token){\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member:Member;\r\n  uploader:FileUploader;\r\n  hasBaseDropzoneOver=false;\r\n  baseUrl=environment.apiUrl;\r\n  user:User;\r\n\r\n  constructor(private accountService:AccountService, private memberService:MembersService) {\r\n    this.accountService.currentUsers$.pipe(take(1)).subscribe(user=>this.user=user)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"Suresh-31\");\r\n    this.initializerUploader();\r\n    console.log(\"Suresh-30\");\r\n  }\r\n\r\n    fileOverBase(e:any){\r\n    this.hasBaseDropzoneOver=e;\r\n  }\r\n\r\n  setMainPhoto(photo:Photo){\r\n    this.memberService.setMainPhoto(photo.id).subscribe(()=>{\r\n      this.user.photoUrl=photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl=photo.url;\r\n      this.member.photos.forEach(p=>{\r\n        if(p.isMain) p.isMain=false;\r\n        if(p.id===photo.id) p.isMain=true;\r\n      })\r\n    })\r\n  }\r\n\r\n  initializerUploader(){\r\n    console.log(\"Suresh-33\");\r\n    this.uploader = new FileUploader({\r\n      url:this.baseUrl+'users/add-photo',\r\n      authToken: ' Bearer ' + this.user.token,\r\n      isHTML5:true,\r\n      allowedFileType:['image'],\r\n      removeAfterUpload:true,\r\n      autoUpload:false,\r\n      maxFileSize:10 * 1024 * 1024\r\n    })\r\n    console.log(\"Suresh-33\");\r\n    this.uploader.onAfterAddingFile= (file) => {\r\n      file.withCredentials=false;\r\n      console.log(\"Suresh-34\");\r\n    }\r\n\r\n    this.uploader.onSuccessItem=(item, resopose,status, header)=>{\r\n      if(Response){\r\n        const photo:Photo=JSON.parse(resopose);\r\n        this.member.photos.push(photo);\r\n        if(photo.isMain){\r\n          this.user.photoUrl=photo.url;\r\n          this.member.photoUrl=photo.url;\r\n          this.accountService.setCurrentUser(this.user);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  deletePhoto(photoId:number){\r\n    this.memberService.deletePhoto(photoId).subscribe(()=>{\r\n      this.member.photos=this.member.photos.filter(x=>x.id!=photoId);\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<p>photo-editor works!</p>\n<div class=\"row\">\n    <div class=\"col-2 img-wrapper\" *ngFor=\"let photo of member.photos\">\n    <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\" [class.not-approved]=\"!photo.isApproved\">\n    <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\n        <span class=\"text-danger\">Awaiting approval</span>\n    </div>\n    <div class=\"text-center\">\n        <button \n        [disabled]=\"photo.isMain || !photo.isApproved\" \n        (click)=\"setMainPhoto(photo)\" \n        [ngClass]='photo.isMain ? \"btn-success active\":\"btn-outline-success\"' \n        class=\"btn btn-sm\"\n        >Main</button>\n        <button \n        [disabled]=\"photo.isMain\" \n        (click)=\"deletePhoto(photo.id)\" \n        class=\"btn btn-sm btn-danger\"\n        \n        ><i class=\"fa fa-trash\"></i></button>\n    </div> \n    </div>\n</div>\n<div class=\"row mt-3\">\n \n        <div class=\"col-md-3\">\n    \n            <h3>Add Photo</h3>\n    \n            <div ng2FileDrop\n                 [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\n                 (fileOver)=\"fileOverBase($event)\"\n                 [uploader]=\"uploader\"\n                 class=\"card bg-faded p-3 text-center mb-3 my-dropp-zone\">\n                 <i class=\"fa fa-upload fa-3x\"></i>\n                 Drop photo here\n            </div>\n    \n            Multiple\n            <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n    \n            Single\n            <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n        </div>\n    \n        <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n    \n            <h3>Upload queue</h3>\n            <p>Queue length: {{ uploader?.queue?.length }}</p>\n    \n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let item of uploader.queue\">\n                    <td><strong>{{ item?.file?.name }}</strong></td>\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                </tr>\n                </tbody>\n            </table>\n    \n            <div>\n                <div>\n                    Queue progress:\n                    <div class=\"progress\" >\n                        <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                    </div>\n                </div>\n                <button type=\"button\" class=\"btn btn-success btn-s\"\n                        (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                    <span class=\"fa fa-upload\"></span> Upload all\n                </button>\n                <button type=\"button\" class=\"btn btn-warning btn-s\"\n                        (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                    <span class=\"fa fa-ban\"></span> Cancel all\n                </button>\n                <button type=\"button\" class=\"btn btn-danger btn-s\"\n                        (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                    <span class=\"fa fa-trash\"></span> Remove all\n                </button>\n            </div>\n    \n        </div>\n    </div>\n","<h4>Internal Server error - refreshing the page will make the error disappear</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error:{{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame </p>\n    <p>What to do nexr?</p>\n    <ol>\n        <li>Open Crome dev tools</li>\n        <li>Inpect the network tab</li>\n        <li>Check the Failing Request</li>\n        <li>Examine the request URL - Make sure is it correct</li>\n        <li>Reproduce the Error in Postman - if we see the same responce, then the issue is not with Angular</li>\n    </ol>\n    <p>Following the Stack Trace - this is where your investigation should start</p>\n    <code class=\"mt-5\" style=\"background-color:whitesmoke\">{{error.details}}</code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\nerror:any;\n\n  constructor(private router:Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error=navigation?.extras?.state?.error;\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit{\n  @Input() appHasRole:string[];\n  user:User;\n\n\n  constructor(private viewContainerRef:ViewContainerRef, \n              private templateRef:TemplateRef<any>, \n              private accountService:AccountService) {\n                this.accountService.currentUsers$.pipe(take(1)).subscribe(user=>{\n                  this.user=user;\n                })\n               }\n  ngOnInit(): void {\n    if(!this.user?.roles || this.user==null){\n      this.viewContainerRef.clear();\n      return;\n    }\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }else{\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style='text-align:center;'>\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on into view your matches...all you need to do is sign up!</p>\n    <div class=\"text-center\">\n        <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n        <button class=\"btn btn-info btn-lg\">Learn More</button>\n    </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <app-register (cancelRegiser)=\"cancelRegistranionMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nregisterMode=false;\nusers:any;\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n\nregisterToggle(){\n    this.registerMode= ! this.registerMode;\n}\n\ncancelRegistranionMode(event:boolean){\n  this.registerMode=event;\n}\n\n}\n","export interface Pagination{\n        currentPage:number;\n        itemsPerpage:number;\n        totalItems:number;\n        totalPages:number;\n}\n\nexport class PaginatedResult<T>{\n\n    result: T;\n    pagination:Pagination;\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'https://localhost:5001/api/',\n  hubUrl:'https://localhost:5001/hubs/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService:AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    \n    let currentUser:User;\n\n    this.accountService.currentUsers$.pipe(take(1)).subscribe(user=>currentUser=user)\n\n    if(currentUser){\n      request = request.clone({\n        setHeaders:{\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","<div class=\"row mb-4\">\n    <div class=\"btn-group\" name='container'>\n        <button class=\"btn btn-primary\" btnRadio='Unread'[(ngModel)]=\"continer\"\n            (click)=\"loadMessage()\">\n            <i class=\"fa fa-envelope\"></i>Unread\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Inbox'[(ngModel)]=\"continer\"\n        (click)=\"loadMessage()\">\n        <i class=\"fa fa-envelope-open\"></i>Inbox\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Outbox'[(ngModel)]=\"continer\"\n        (click)=\"loadMessage()\">\n        <i class=\"fa fa-paper-plane\"></i>Outbox\n        </button>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length===0\">\n    <h3>No messages</h3>\n</div>\n<div class=\"row\" *ngIf=\"messages?.length>0\">\n    <table class=\"table table-hover\" style=\"cursor:pointer\">\n    <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 20%\">From / To</th>\n        <th style=\"width: 20%\">Sent / Recive</th>\n        <th style=\"width: 20%\"></th>\n    </tr>\n        <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" routerLink='{{continer === \"Outbox\" \n                    ? \"/members/\" + message.recipientUsername\n                    : \"/members/\" + message.senderUsername}}'[queryParams]='{tab: 3}'>\n                <td>{{message.content}}</td>\n                <td>\n                    <div *ngIf=\"continer==='Outbox'\">\n                        <img \n                        class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.recipientUsername}}\">\n                        <strong>{{message.senderUsername | titlecase}}</strong>\n                    </div>\n                    <div *ngIf=\"continer!=='Outbox'\">\n                        <img \n                        class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.senderUsername}}\">\n                        <strong>{{message.senderUsername | titlecase}}</strong>\n                    </div>\n                </td>\n                <td>{{message.messageSent | timeago}}</td>\n                <td>\n                    <button (click)=\"$event.stopPropagation()\"  (click)=\"deleteMessage(message.id)\" class=\" btn btn-danger\">Delete</button>\n                </td>\n        </tr>\n    </table>\n</div>\n<div *ngIf=\"(continer=='Outbox' || continer=='Inbox' || continer=='Unread') && messages?.length>0\">\n<div class=\"d-flex justify-content-center\"  *ngIf=\"pagination && !loading \">\n    <pagination [boundaryLinks]=\"true\" \n                [totalItems]=\"pagination.totalItems\"\n                [itemsPerPage]=\"pagination.itemsPerPage\"\n                [(ngModel)]=\"pagination.currentPage\"\n                (pageChanged)=\"pageChanged($event)\"\n                previousText=\"&lsaquo;\" \n                nextText=\"&rsaquo;\" \n                firstText=\"&laquo;\" \n                lastText=\"&raquo;\">\n     \n    </pagination>\n</div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\nmessages:Message[]=[];\npagination:Pagination;\ncontiner ='Unread';\npageNumber = 1;\npageSize = 5;\nloading=false;\n\n\n  constructor(private messageService:MessageService, private confirmService:ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessage();\n    console.log(\"suresh\");\n  }\n\n  loadMessage(){\n    this.loading=true;\n    this.messageService.getMessage(this.pageNumber,this.pageSize, this.continer).subscribe(Response=>{\n      this.messages=Response.result;\n      this.pagination=Response.pagination;\n      this.loading=false;\n    })\n  }\n\n  deleteMessage(id:number){\n    this.confirmService.confirm('Confirm Delete Mesage', 'this connot be undone').subscribe(result=>{\n      if(result){\n        this.messageService.deleteMessage(id).subscribe(()=>{\n          this.messages.splice(this.messages.findIndex(m=>m.id==id), 1)\n        })\n      }\n    })\n  }\n\n\n  /*pageChanged(event:any){\n    this.pageNumber= event.page;\n    this.loadMessage();\n  }\n*/\n  pageChanged(event: any){\n    if (this.pageNumber !== event.page) {\n        this.pageNumber = event.page;\n        console.log(this.pageNumber);\n        this.loadMessage();\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker'\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago'\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass:'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n\n  ], \n  exports:[\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport { constants } from 'buffer';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router:Router, private toastr:ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error=>{\n        if(error){\n          switch(error.status){\n            case 400:\n              if(error.error.errors){\n                const modalStateErrors=[];\n                for(const key in error.error.errors){\n                  if(error.error.errors[key]){\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error)==='object'){\n                this.toastr.error(error.statusText, error.status);\n              } else {\n                this.toastr.error(error.error,error.status)\n              }\n            break;\n            \n            case 401:\n              this.toastr.error(error.statusText, error.status);\n            break;\n\n            case 404:\n              this.router.navigateByUrl('/not-found')\n            break;\n\n            case 500:\n              const navigationExtras: NavigationExtras={state:{error:error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n            break;\n\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n            break;\n          }          \n        }\n        return throwError(error);       \n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUsers$.pipe(\n      map(user => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        else\n        {\n          this.toastr.error('You cannot enter this area');\n          return false;\n        }\n      })\n    )\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Photo } from '../_models/photo';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl=environment.apiUrl;\n\n  constructor(private http:HttpClient) { }\n\n  getUsersWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n  updateUserRoles(username:string, roles:string[]){\n    console.log(username,roles);\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n\n  getPhotosForApproval(){\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate')\n  }\n  approvePhoto(photoId:number){\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\n  }\n\n  rejectPhoto(photoId:number){\n    return this.http.post(this.baseUrl + 'admin/reject-photo/' + photoId, {});\n  }\n\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService, \r\n    private toastr: ToastrService) { \r\n      this.accountService.currentUsers$.pipe(take(1)).subscribe(user => this.user = user);\r\n      console.log(this.user.username + \"Suresh 4\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    console.log(this.user.username + \" Suresh 1\");\r\n    this.memberService.getMember(this.user.username).subscribe(member => {\r\n      this.member = member;\r\n      console.log(this.member + \"Suresh 2\");\r\n    })\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\n    <div class=\"col-4\">\n        <h1>Your profile</h1>\n    </div>\n    <div class=\"col-8\">\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n            <strong>Information: </strong> You have made changes.  Any unsaved changes will be lost\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}}, {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last Active:</strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading='About {{member.knownAs}}'>\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Looking for</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Interests</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Location Details: </h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">City: </label>\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n                        <label for=\"city\">Country: </label>\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n                    </div>\n                </form>\n               \n            </tab>\n            <tab heading='Edit Photos'>\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\n            </tab>\n        </tabset>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\nusers:Partial<User[]>;\r\nbsModalRef:BsModalRef;\r\n\r\n  constructor(private adminService:AdminService, private modalService:BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  this.getUsersWithRoles();   \r\n  }\r\n\r\n\r\n  getUsersWithRoles(){\r\n      this.adminService.getUsersWithRoles().subscribe(users=>{\r\n        this.users=users;\r\n        console.log( this.users);\r\n      })\r\n  }\r\n\r\n  openRolesModal(user:User){ \r\n    console.log( user.username);\r\n      const config = {\r\n      class:'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user)\r\n      }\r\n    }\r\n\r\n\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\r\n      const rolesToUpdate = {\r\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n      };\r\n\r\n      if (rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roles]\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      {name: 'Admin', value: 'Admin'},\r\n      {name: 'Moderator', value: 'Moderator'},\r\n      {name: 'Member', value: 'Member'}\r\n    ];\r\n\r\n\r\n    availableRoles.forEach(role => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n        if(!isMatch){\r\n          role.checked=false;\r\n          roles.push(role);\r\n        }\r\n      })\r\n      return roles;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\n    <table class=\"table\">\n        <tr>\n            <th style=\"width:30%\">UserName</th>\n            <th style=\"width:30%\">Active Roles</th>\n            <th style=\"width:30%\"></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username}}</td>\n            <td>{{user.roles}}</td>\n            <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Role</button></td>\n        </tr>\n    </table>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n  \n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input() member:Member;\n  \n  constructor(private memberService: MembersService, private toster:ToastrService, public presence: PresenceService ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  addLike(member:Member){\n    this.memberService.addLike(member.username).subscribe(()=>{\n        this.toster.success('you have liked ' + member.username);\n    })\n  }\n\n}\n","<div class=\"card mb-4\">\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\"> \r\n      <ul class=\"list-inline member-icons animate text-center\">\r\n        <li class=\"list-inline-item\"><button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\r\n              <i class=\"fa fa-user\"></i></button></li>\r\n          <li class=\"list-inline-item\"><button (click)='addLike(member)' class=\"btn btn-primary\">\r\n              <i class=\"fa fa-heart\"></i></button></li>\r\n          <li class=\"list-inline-item\"><button \r\n                routerLink='/members/{{member.username}}' \r\n                [queryParams]='{tab: 3}'\r\n                class=\"btn btn-primary\">\r\n              <i class=\"fa fa-envelope\"></i></button></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"card-body p-1\">\r\n        <h6 class=\"card-title text-cente mb-1\">\r\n        <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n          <i class=\"fa fa-user mr-2\"></i>\r\n        </span>\r\n        {{member.username}},{{member.age}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center\">{{member.city}} </p>\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  mytrue:true;\n  constructor(private accountService:AccountService, private toastr:ToastrService){}\n  canActivate(): Observable<boolean> {\n  return this.accountService.currentUsers$.pipe( \n    map(user=> {\n      if (!user) {\n        this.toastr.error('you shall not pass')\n        return false;\n      } \n      return true;\n    }) \n  )\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-fount',\n  templateUrl: './not-fount.component.html',\n  styleUrls: ['./not-fount.component.css']\n})\nexport class NotFountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to Home page</button>\n</div>\n","import { group } from '@angular/animations';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject, observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { BussyService } from './bussy.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor( private http:HttpClient, private busyService:BussyService) { }\r\n  \r\n  createHubConnection(user:User, otherUserName:string){\r\n    this.busyService.bussy();\r\n    this.hubConnection=new HubConnectionBuilder()\r\n        .withUrl(this.hubUrl + 'message?user=' + otherUserName, {\r\n          accessTokenFactory:()=>user.token\r\n        })\r\n        .withAutomaticReconnect()\r\n        .build()\r\n\r\n      this.hubConnection.start()\r\n        .catch(error=> console.log(error))\r\n        .finally(()=>this.busyService.idle());\r\n\r\n      this.hubConnection.on('ReceiveMessageThread', message=>{\r\n        this.messageThreadSource.next(message);\r\n      });\r\n\r\n      this.hubConnection.on('NewMessage', message=>{\r\n        this.messageThread$.pipe(take(1)).subscribe(messages=>{\r\n          this.messageThreadSource.next([...messages, message])\r\n        })\r\n        \r\n      });\r\n\r\n      this.hubConnection.on('UpdatedGroup', (group:Group)=>{\r\n        if(group.connections.some(x=>x.username===otherUserName)){\r\n          this.messageThread$.pipe(take(1)).subscribe(messages=>{\r\n            messages.forEach(message =>{\r\n              if(!message.dateRead){\r\n                message.dateRead=new Date(Date.now());\r\n              }\r\n            })\r\n            this.messageThreadSource.next([...messages]);\r\n          })\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  stopHubConnection(){\r\n    if(this.hubConnection){\r\n      this.messageThreadSource.next([]);\r\n    this.hubConnection.stop();\r\n  }\r\n  }\r\n\r\n  getMessage(pageNumber, pageSize, continer){\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n        params = params.append('Container', continer);\r\n        return getPaginatedResult<Message[]>(this.baseUrl+ 'messages', params, this.http);\r\n  }\r\n\r\n\r\n  getMessageThread(username:string){\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username)\r\n  }\r\n\r\n  async sendMessage(username: string, content:string){\r\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\r\n    .catch(error=>console.log(error));\r\n  }\r\n\r\n  deleteMessage(id:number){\r\n    return this.http.delete<Message>(this.baseUrl + 'messages/' + id);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'DatingApp';\n  users:any;\n\n  constructor( private accountService:AccountService, private presence:PresenceService){}\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\nsetCurrentUser(){\n  const user: User = JSON.parse(localStorage.getItem('user'));\n  if(user){\n    this.accountService.setCurrentUser(user);  \n    this.presence.createHubConnection(user);\n  }\n  \n  }\n\n}\n\n\n","\n<ngx-spinner>\n    <h1>Loading.....</h1>\n</ngx-spinner>\n<app-nav></app-nav>\n<div class=\"container\" style=\"margin-top: 100;\">\n<router-outlet></router-outlet>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n\n  baseUrl=environment.apiUrl;\n  members:Member[]=[];\n  memberCache= new Map();\n  user:User;\n  userParams:UserParams;\n  \n\n  constructor(private http: HttpClient, private accountService:AccountService) {\n    this.accountService.currentUsers$.pipe(take(1)).subscribe(user=>{\n      this.user=user;\n      this.userParams=new UserParams(user);\n    })\n   }\n\n   getUserParams(){\n    return this.userParams;\n   }\n\n   setUSerParams(params:UserParams){\n    this.userParams=params;\n   }\n\n\n   restUserParams(){\n    this.userParams=new UserParams(this.user);\n    return this.userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n      params=params.append('minAge', userParams.minAge.toString());\n      params=params.append('maxAge', userParams.maxAge.toString());\n      params=params.append('gender', userParams.gender);\n      params=params.append('orderBy', userParams.orderBy);\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n    .pipe(map(response=>{\n      this.memberCache.set(Object.values(userParams).join('-'), response);\n      return response;\n    }))\n  }\n\n \n\n  getMember(userName:string){\n    const member = [...this.memberCache.values()]\n      .reduce((arr,elem)=>arr.concat(elem.result),[])\n      .find((member:Member)=> member.username===userName);\n      if(member){\n        return of(member);\n      }\n      console.log(userName + \"Suresh 3\");\n    return this.http.get<Member>(this.baseUrl + 'users/' + userName);\n  }\n\n  updateMember(member:Member){\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(()=>{\n        const index = this.members.indexOf(member);\n        this.members[index]=member;\n      })\n    )\n  }\n  setMainPhoto(PhotoId:number){\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + PhotoId, {});\n  }\n\n  deletePhoto(PhotoId:number){\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + PhotoId)\n  }\n\n\n  addLike(username:string){\n    return this.http.post(this.baseUrl + 'likes/' + username, {})\n  }\n\n  getLikes(predicate:string, pageNumber, pageSize){\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params=params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './member/member-list/member-list.component';\nimport { MemberDetailComponent } from './member/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFountComponent } from './errors/not-fount/not-fount.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './member/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './member/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoodingInterceptor } from './_interceptors/looding.interceptor';\nimport { PhotoEditorComponent } from './member/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './member/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFountComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {provide:HTTP_INTERCEPTORS, useClass:ErrorInterceptor, multi:true},\n    {provide:HTTP_INTERCEPTORS, useClass:JwtInterceptor, multi:true},\n    {provide:HTTP_INTERCEPTORS, useClass:LoodingInterceptor, multi:true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Member } from \"../_models/member\";\nimport { MembersService } from \"../_services/members.service\";\n\n@Injectable({\n    providedIn:'root'\n})\nexport class MemberDetailedResolver implements Resolve<Member>{\n\n    constructor(private memberService:MembersService){}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n       return this.memberService.getMember(route.paramMap.get('username'));\n    }\n\n}","import { identifierModuleUrl } from '@angular/compiler';\nimport { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BussyService {\n\n  busyRequestCount=0;\n\n  constructor(private spinnerService:NgxSpinnerService) { }\n\n  bussy(){\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type:'line-scale-party',\n      bdColor:'rgba(255,255,255,0)',\n      color:'#333333'\n    });\n  }\n\n\n  idle(){\n  this.busyRequestCount--;\n  if(this.busyRequestCount<=0){\n    this.busyRequestCount=0;\n    this.spinnerService.hide();\n  }\n  }\n}\n\n\n","<div class=\"form-group\">\n    <input \n        [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n        type={{type}}\n        class=\"form-control\" \n        [formControl]=\"ngControl.control\"\n        placeholder={{label}}>\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}\n    </div>\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}\n    </div>\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\n        Passwords do not match\n    </div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {\n  }\n\n  registerOnChange(fn: any): void {\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n  \n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate==='liked' ? 'Members I Like': 'Member Who Like me'}}</h2>\n</div>\n<div class=\"continer mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name='predicate'>\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" \n            [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members I Like</button>\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" \n            [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members who Like Me</button>\n        </div>\n    </div>\n \n    <div class=\"row mt-3\">\n        <div class=\"col-2\" *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n    \n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination \n        [boundaryLinks]=\"true\" \n         [totalItems]=\"pagination.totalItems\"\n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        previousText=\"&lsaquo;\" \n        nextText=\"&rsaquo;\" \n        firstText=\"&laquo;\" \n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\nmembers:Partial<Member[]>;\npredicate='liked';\npageNumber=1;\npageSize=5;\npagination:Pagination;\n\n  constructor(private memeberservice:MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\nloadLikes(){\n  this.memeberservice.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response=>{\n    this.members=response.result;\n    this.pagination=response.pagination;\n  })\n}\n\npageChanged(event:any){\n  this.pageNumber=event.page;\n  this.loadLikes();\n}\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination?.totalItems}}</h2>\n</div>\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label>Age From:</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" name=\"minAge\" \n      [(ngModel)]=\"userParams.minAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label>Age To:</label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" name=\"maxAge\" \n      [(ngModel)]=\"userParams.maxAge\">\n    </div>\n\n    <div class=\"form-group px-2\">\n      <label>Show:</label>\n      <select name=\"gender\" style=\"width: 130px\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.gender\">\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{gender.display}}\n        </option>\n      </select>\n    </div>\n\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">Reset Filters</button>\n    <div class=\"col\">\n    <div class=\"btn-group float-right\">\n      <button type=\"button\"\n              class=\"btn btn-primary\" \n              name=\"orderBy\" \n              (click)=\"loadMembers()\"\n              btnRadio='LastActive'\n              [(ngModel)]=\"userParams.orderBy\"> LastActive</button>\n      <button type=\"button\"\n              class=\"btn btn-primary\" \n              name=\"orderBy\" \n              (click)=\"loadMembers()\"\n              btnRadio='created'\n              [(ngModel)]=\"userParams.orderBy\"> Newest Members</button>\n    </div>\n  </div>\n  </form>\n</div>\n<div class=\"row\">\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n      <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n<pagination [boundaryLinks]=\"true\" \n            [totalItems]=\"pagination.totalItems\"\n            [itemsPerPage]=\"pagination.itemsPerPage\"\n            [(ngModel)]=\"pagination.currentPage\"\n            (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" \n            nextText=\"&rsaquo;\" \n            firstText=\"&laquo;\" \n            lastText=\"&raquo;\">\n \n</pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n\n  members:Member[];\n  pagination:Pagination;\n  userParams:UserParams;\n  user:User;\n  genderList=[{value:'male', display:'males'}, {value: 'female', display:'females'}];\n\n  constructor(private memberservce:MembersService) { \n    this.userParams=this.memberservce.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers(){\n    this.memberservce.setUSerParams(this.userParams);\n    this.memberservce.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  resetFilters(){\n    this.userParams=this.memberservce.restUserParams();\n    this.loadMembers();\n  }\n\n\n   pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberservce.setUSerParams(this.userParams);\n    this.loadMembers();\n  }\n\n\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n<div class=\"container\">\r\n      <a class=\"navbar-brand\" routerLink='/'>Dating App</a>\r\n      \r\n        <ul class=\"navbar-nav mr-auto\" >\r\n        <ng-container *ngIf=\"accountService.currentUsers$ |async\" >\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/members' routerLinkActive='active'>Members</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Links</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/messages' routerLinkActive='active'>Messages</a>\r\n          </li>\r\n          <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/admin' routerLinkActive='active' >Admin</a>\r\n          </li>\r\n        </ng-container>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/error' routerLinkActive='active'>Errors</a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUsers$ | async) as User\" dropdown>\r\n          <img src=\"{{User.photoUrl||'./assets/user.png'}}\" alt=\"{{User.userName}}\">\r\n          <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{User.username | uppercase }} </a>\r\n          <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n            <a routerLink='/member/edit' class=\"dropdown-item\">Edit Profile</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\"(click)=\"logout()\">Logout</a>\r\n          </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"(accountService.currentUsers$ | async) == null\" #LoginForm=\"ngForm\" class=\"form-inline mt-md-0\" (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n          <input \r\n            name=\"username\"\r\n            [(ngModel)]=\"model.username\"\r\n            class=\"form-control mr-sm-2\" \r\n            type=\"text\" \r\n            placeholder=\"UserName\">\r\n          <input \r\n            name=\"password\"\r\n            [(ngModel)]=\"model.password\"\r\n            class=\"form-control mr-sm-2\" \r\n            type=\"password\" \r\n            placeholder=\"Password\">\r\n          <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n\r\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n \n  \n  model: any={}\n  currentUser$: Observable<User>;\n\n  constructor(public accountService: AccountService, \n              private router:Router, \n              private toastr:ToastrService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  login(){\n    this.accountService.login(this.model).subscribe(response=>{\n      this.router.navigateByUrl('/members');\n    })\n  }\n  \n  logout(){\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$=this.onlineUsersSource.asObservable();\n\n\n  constructor(private toaster:ToastrService, private router:Router) { }\n\n  createHubConnection(user: User) {\n    \n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n      this.hubConnection.on('UserIsOnline', username => {\n        this.onlineUsers$.pipe(take(1)).subscribe(usernames=>{\n          this.onlineUsersSource.next([...usernames, username])\n        })\n      })\n\n      this.hubConnection.on('UserIsOffline', username => {\n        this.onlineUsers$.pipe(take(1)).subscribe(usernames=>{\n          this.onlineUsersSource.next([...usernames.filter(x=>x !=username)])\n        })\n      })\n\n      this.hubConnection.on('GetOnlineUsers', (username:string[])=>{\n        this.onlineUsersSource.next(username);\n      } )\n\n      this.hubConnection.on('NewMessageRecived',({username, knownAs})=>{\n        this.toaster.info(knownAs + ' has sent you a new message!')\n        .onTap\n        .pipe(take(1))\n        .subscribe(()=>this.router.navigateByUrl('/members/' + username + '?tab=3'));\n      })\n  }\n\n      stopHubConnecton(){\n        this.hubConnection.stop().catch(error=>console.log(error));\n      }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { pathToFileURL } from 'node:url';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('memberTabs', {static:true}) memberTabs:TabsetComponent;\r\n  member:Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab:TabDirective;\r\n  messages:Message[]=[];\r\n  user:User;\r\n\r\n  constructor(public presence:PresenceService, private route: ActivatedRoute, \r\n    private messageService:MessageService, private accountService: AccountService, private router:Router) {\r\n      this.accountService.currentUsers$.pipe(take(1)).subscribe(user=>this.user=user);\r\n      this.router.routeReuseStrategy.shouldReuseRoute=()=>false;\r\n     }\r\n\r\n\r\n  ngOnInit(): void {\r\n  this.route.data.subscribe(data=>{\r\n    this.member=data.member;\r\n    console.log(this.member.knownAs +\" Suresh Basappa\");\r\n  })\r\n\r\n  this.route.queryParams.subscribe(params=>{\r\n    params.tab ? this.selectTab(params.tab) : this.selectTab(0)\r\n  })\r\n\r\n  this.galleryOptions=[\r\n    {\r\n      width:'500px',\r\n      height:'500px',\r\n      imagePercent:100,\r\n      thumbnailsColumns:4,\r\n      imageAnimation:NgxGalleryAnimation.Slide,\r\n      preview:false\r\n    }\r\n  ]  \r\n  this.galleryImages=this.getImages();\r\n  }\r\n\r\n  getImages():NgxGalleryImage[]{\r\n    const imageUrls=[];\r\n    for(const Photo of this.member.photos){\r\n      imageUrls.push({\r\n        small:Photo?.url,\r\n        medium:Photo?.url,\r\n        big:Photo?.url\r\n      })\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n\r\n loadMessages(){\r\n    this.messageService.getMessageThread(this.member.username).subscribe(messages=>{\r\n      this.messages=messages;\r\n    })\r\n  }\r\n\r\n  selectTab(tabId:number){\r\n    this.memberTabs.tabs[tabId].active=true;\r\n  }\r\n\r\n  onTabActivated(data:TabDirective){\r\n    this.activeTab=data;\r\n    if(this.activeTab.heading==='Message' && this.messages.length===0){\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    }else{\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n}\r\n","<div class=\"row\" >\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n            class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"md-2\" *ngIf=\"(presence.onlineUsers$ |async).includes(member.username)\">\r\n                    <i class=\"fa fa-user-circle text-success\"></i>online Now\r\n                </div>\r\n\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active</strong>\r\n                    <p>{{member.lastActive| timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member Sience:</strong>\r\n                    <p>{{member.created|date:'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>  \r\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>                 \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n                \r\n                <h1>Description</h1>\r\n                <p>{{member.interduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Intrests' (selectTab)=\"onTabActivated($event)\">\r\n                <h1>Intrests</h1>\r\n                <p>{{member.intests}}</p>\r\n            </tab>\r\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"\r\n                style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Message' (selectTab)=\"onTabActivated($event)\">\r\n                <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { User } from \"./user\";\n\nexport class UserParams{\n    gender:string;\n    minAge=18;\n    maxAge=99;\n    pageNumber=1;\n    pageSize=10;\n    orderBy='lastActive';\n\n    constructor(user: User){\n        this.gender=user.gender === 'female'?'male':'female';\n    }\n}\n\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\n            <div class=\"container\">\n                <app-user-management></app-user-management>\n            </div>\n        </tab>\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\n            <div class=\"container\">\n                <app-photo-management></app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\r\n    <div class=\"card-body\"\r\n        #scrollMe\r\n        style=\"overflow: scroll; height: 435px;\"\r\n        [scrollTop]=\"scrollMe.scrollHeight\" >\r\n        <div *ngIf=\"(messageService.messageThread$|async)?.length===0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n        <ul       \r\n        *ngIf=\"(messageService.messageThread$|async)?.length>0\" \r\n        class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$|async)\" >\r\n                <div>\r\n                    <span class=\"chat-img float-right\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\r\n                         alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input \r\n                    name=\"messageContent\"\r\n                    required\r\n                    [(ngModel)]=\"messageContent\"\r\n                    type=\"text\" \r\n                    class=\"form-control input-sm\" \r\n                    placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid || loading \" class=\"btn btn-primary\" type=\"submit\">Send\r\n                        <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, Input, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  changeDetection:ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n\n  @ViewChild('messageForm') messageForm:NgForm;\n  @Input() messages:Message[];\n  @Input() username:string;\n  messageContent:string;\n  loading = false;\n  message1:Message;\n\n  \n    constructor(public messageService:MessageService) { }\n  \n    ngOnInit(): void {\n\n    }\n\n    sendMessage(){\n      this.loading=true;\n      this.messageService.sendMessage(this.username, this.messageContent).then(()=>{\n          this.messageForm.reset();\n      }).finally(()=>this.loading=false);\n\n    }\n  \n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { PaginatedResult } from \"../_models/pagination\";\n\nexport function getPaginatedResult<T>(url, params, http:HttpClient) {\n   \n    const paginatedResult:PaginatedResult<T>=new PaginatedResult<T>();\n    return http.get<T>(url, { observe: 'response', params }).pipe(\n      map(Response => {\n        paginatedResult.result = Response.body;\n        if (Response.headers.get('Pagination') !== null) {\n          paginatedResult.pagination = JSON.parse(Response.headers.get('Pagination'));\n        }\n        return paginatedResult;\n      })\n    );\n  }\n\n  export function getPaginationHeaders(pageNumber: number, pageSize:number){\n  \n      let params = new HttpParams();\n      params=params.append('pageNumber', pageNumber.toString());\n      params=params.append('pageSize', pageSize.toString());\n      return params;\n \n  }","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../member/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService:ConfirmService){}\n  canDeactivate(component: MemberEditComponent):Observable<boolean> | boolean{\n    if(component.editForm.dirty){\n      return this.confirmService.confirm()\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title:string;\n  message:string;\n  btnOkText:string;\n  btnCancelText:string;\n  result:boolean;\n\n\n\n  constructor(public bsModalRef:BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.result=true;\n    this.bsModalRef.hide();\n  }\n\n  decline(){\n    this.result=false;\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n  </div>\n  <div class=\"modal-body\">\n  <p>{{message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFountComponent } from './errors/not-fount/not-fount.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './member/member-detail/member-detail.component';\nimport { MemberEditComponent } from './member/member-edit/member-edit.component';\nimport { MemberListComponent } from './member/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  {path:\"\", component:HomeComponent},\n  {\n    path:'',\n    runGuardsAndResolvers:'always',\n    canActivate:[AuthGuard],\n    children:[\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component: MemberDetailComponent, resolve:{member:MemberDetailedResolver}},\n      {path: 'member/edit', component:MemberEditComponent, canDeactivate:[PreventUnsavedChangesGuard]},\n      {path: 'lists', component:ListsComponent},\n      {path: 'messages', component:MessagesComponent},\n      {path: 'admin', component:AdminPanelComponent, canActivate:[AdminGuard]},\n    ]\n  },\n  {path: 'error', component:TestErrorsComponent},\n  {path: 'not-found', component: NotFountComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFountComponent, pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { observable, Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModelRef:BsModalRef;\n\n  constructor(private modalService:BsModalService) { }\n\n  confirm(title='Confirmation', \n          message='Are you sure you want to do this?',\n          btnOkText='Ok',\n          btnCancelText='Cancel'):Observable<boolean>{\n            const config={\n              initialState:{\n                title,\n                message,\n                btnOkText,\n                btnCancelText\n              }\n            }\n            this.bsModelRef=this.modalService.show(ConfirmDialogComponent, config);\n\n            return new Observable<boolean>(this.getResult());\n          }\n\n  private getResult(){\n    return (observer)=>{\n      const subscription = this.bsModelRef.onHidden.subscribe(()=>{\n        observer.next(this.bsModelRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe(){\n          subscription.unsubscribe();\n        }\n      }\n\n    }\n  }\n\n}\n","import { EventEmitter } from '@angular/core';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n\r\n  @Input() updateSelectedRoles= new EventEmitter();\r\n  user:User;\r\n  roles:any[];\r\n\r\n  constructor(public bsModalRef:BsModalRef, private toster:ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateRoles(){\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n    this.toster.success('you have update the ' + this.user.username + ' roles');\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\r\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n      <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n          <input type=\"checkbox\"\r\n              class=\"form-check-input\"\r\n              [checked]=\"role.checked\"\r\n              value=\"role.name\"\r\n              (change)=\"role.checked = !role.checked\"\r\n              [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\r\n          >\r\n          <label>{{role.name}}</label>\r\n      </div>\r\n  </form>\r\n</div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\r\n  </div>\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}